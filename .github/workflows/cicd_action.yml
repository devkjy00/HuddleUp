# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

env:
  PROJECT_NAME: HuddleUp
  BUCKET_NAME: southoftheriver-cicd
  CODE_DEPLOY_APP_NAME: ec2-deploy
  DEPLOYMENT_GROUP_NAME: spring-deploy

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'

    - name: Configure GPG Key
      uses: crazy-max/ghaction-import-gpg@v3
      with:
        gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
        passphrase: ${{ secrets.GPG_PASSPHRASE }}
        git-user-signingkey: true
        git-commit-gpgsign: true

    - name: Reveal secrets
      env:
        SECRET_PWD: ${{ secrets.GPG_PASSPHRASE }}
      run: |
        sudo apt install git-secret                     
#        git secret tell anwjsrlrhwkd@naver.com
#        git secret reveal -p $(echo $SECRET_PWD | sed 's/./& /g')

      

    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew
      shell: bash

    - name: Build with Gradle
      run: ./gradlew build
      shell: bash

    # Jar 파일 Copy
    - name: Copy Jar
      run: cp ./build/libs/*.jar .
      shell: bash

    # 압축파일 형태로 전달
    - name: Make zip file
      run: zip -r ./$PROJECT_NAME.zip .
      shell: bash

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.IAM_CICD_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.IAM_CICD_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2

    - name: Upload to S3
      run: aws s3 cp --region ap-northeast-2 ./$PROJECT_NAME.zip s3://$BUCKET_NAME/$PROJECT_NAME.zip

    - name: Code Deploy
      run: aws deploy create-deployment --application-name $CODE_DEPLOY_APP_NAME --deployment-config-name CodeDeployDefault.AllAtOnce --deployment-group-name $DEPLOYMENT_GROUP_NAME --file-exists-behavior OVERWRITE --s3-location bucket=$BUCKET_NAME,bundleType=zip,key=$PROJECT_NAME.zip


      




